
user  					nginx;
worker_processes		auto;

error_log  				/var/log/nginx/error.log warn;
pid        				/var/run/nginx.pid;

events {
  	worker_connections  1024;
	multi_accept on;
}

http {
	include       		/etc/nginx/mime.types;
	default_type  		application/octet-stream;

	log_format  main  	'$remote_addr - $remote_user [$time_local] "$request" '
						'$status $body_bytes_sent "$http_referer" '
						'"$http_user_agent" "$http_x_forwarded_for"';

	# http://www.softwareprojects.com/resources/programming/t-optimizing-nginx-and-php-fpm-for-high-traffic-sites-2081.html
	access_log  		/var/log/nginx/access.log main buffer=16k;

  	sendfile      		on;
	tcp_nopush     		on;
	tcp_nodelay			on;

  	#keepalive_timeout  65;
	keepalive_timeout  	15 15;
	send_timeout 		10;

	# http://www.softwareprojects.com/resources/programming/t-optimizing-nginx-and-php-fpm-for-high-traffic-sites-2081.html
	fastcgi_buffers 256 16k;
	fastcgi_buffer_size 128k;
	fastcgi_connect_timeout 7s;
	fastcgi_send_timeout 120s;
	fastcgi_read_timeout 120s;
	fastcgi_busy_buffers_size 256k;
	fastcgi_temp_file_write_size 256k;
	reset_timedout_connection on;
	server_names_hash_bucket_size 100;

	open_file_cache max=2000 inactive=20s;
	open_file_cache_valid 60s;
	open_file_cache_min_uses 5;
	open_file_cache_errors off;

	# https://www.digitalocean.com/community/tutorials/how-to-optimize-nginx-configuration
	client_max_body_size 100M;
	client_body_buffer_size 1m;
	client_body_timeout 15;
	client_header_timeout 15;
	client_header_buffer_size 8k;
	large_client_header_buffers 2 1k;

	# SEGURANCA CONFOME EXPOSTO AQUI:
	# https://gist.github.com/plentz/6737338
	# https://content-security-policy.com/
	# https://developers.google.com/web/fundamentals/security/csp/
	# GERADO POR GeradorCPS (na pasta nginx)
	include geral/contentsecurity.conf;

	# config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
	# to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
	add_header Strict-Transport-Security "max-age=15768000; includeSubdomains;" always;

	# USO DE COMPREÇÃO
	# TEXT curl --header "Accept-Encoding: gzip,deflate,sdch" -I
	gzip				on;
	gzip_http_version 	1.1;
	gzip_proxied 		any;
	gzip_buffers    	16 8k;
	gzip_comp_level 	9;
	gzip_min_length 	1024; # NAO CUMPRIMIR NADA MENOR QUE 1024 BYTES
	gzip_disable 		"MSIE [1-6]\.(?!.*SV1)"; # gzip_disable "msie6";
	gzip_types 			image/svg+xml text/plain text/html text/css application/json application/x-javascript application/xml application/xml+rss text/javascript application/javascript text/x-js font/otf application/font-otf application/font application/otf application/octet-stream application/x-font-otf application/x-font-TrueType image/jpeg image/png audio/mpeg audio/ogg;
	gzip_vary         	on;

	# INDEX
	index index.php index.html index.htm;

	#
	# http://stackoverflow.com/questions/31886722/set-nginx-root-based-on-existance-of-another-directory
	# http://serverfault.com/questions/828661/nginx-root-based-on-hostname-without-www
	#
	# DEVE SER ACRESCENTADO ISSO AO HTTP{}
	#

	#
	# MAPEAMENTOS
	#

	# DOMINIO SEM WWW
	map $http_host $maindomain {
		"~^(?:www\.)?(?P<mdomain>.+)$" $mdomain;
	}

	# SUBDOMINIO SEM WWW
	map $http_host $subdir {
		"~^(?:www\.)?(?P<subdomain>[^\. ]+)?(.+)?\.(?:[a-z]{2,}|XN--\w+)+$" $subdomain;
	}

	# DOMINIO SEM O SUBDOMINIO $subdir (E SEM WWW)
	map $http_host $rootdir {
		"~^(?:www\.)?([^\. ]+\.)?(?P<domain>(.+)+\.(?:[a-z]{2,}|XN--\w+)+)$" $domain;
	}

	include /etc/nginx/conf.d/*.conf;
}
