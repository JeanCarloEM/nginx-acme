#
# https://mozilla.github.io/server-side-tls/ssl-config-generator/
# https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html#SSLv2_and_SSLv3
#

# https://www.digitalocean.com/community/tutorials/how-to-secure-nginx-with-let-s-encrypt-on-centos-7
# https://www.unpm.org/wiki/Set_up_SSL/TLS_with_Let%27s_Encrypt
location ~ /.well-known {
	allow all;
}

# HABILITAR
# ssl on; # DEPRECIADO

# SEGURANCA CONFOME EXPOSTO AQUI:
# https://gist.github.com/plentz/6737338

# enable session resumption to improve https performance
# http://vincent.bernat.im/en/blog/2011-ssl-session-reuse-rfc5077.html
# http://nginx.org/en/docs/http/configuring_https_servers.html
ssl_session_cache   	shared:SSL:15m;
ssl_session_timeout 	15m;
ssl_session_tickets 	off;

#
ssl_ecdh_curve secp384r1:secp521r1;

# enables server-side protection from BEAST attacks
# http://blog.ivanristic.com/2013/09/is-beast-still-a-threat.html
ssl_prefer_server_ciphers on;
ssl_early_data on;


# disable SSLv3(enabled by default since nginx 0.8.19) since it's less secure then TLS http://en.wikipedia.org/wiki/Secure_Sockets_Layer#SSL_3.0
#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
#https://mozilla.github.io/server-side-tls/ssl-config-generator/
ssl_protocols TLSv1.3;

# enable ocsp stapling (mechanism by which a site can convey certificate revocation information to visitors in a privacy-preserving, scalable manner)
# https://raymii.org/s/tutorials/OCSP_Stapling_on_nginx.html
# http://blog.mozilla.org/security/2013/07/29/ocsp-stapling-in-firefox/
resolver 					8.8.8.8 8.8.4.4 valid=300s;
resolver_timeout			5s;
ssl_stapling 				on;
ssl_stapling_verify 		on;
ssl_verify_depth			3;

# https://haydenjames.io/nginx-tuning-tips-tls-ssl-https-ttfb-latency/
ssl_buffer_size 4k;

# config to enable HSTS(HTTP Strict Transport Security) https://developer.mozilla.org/en-US/docs/Security/HTTP_Strict_Transport_Security
# to avoid ssl stripping https://en.wikipedia.org/wiki/SSL_stripping#SSL_stripping
add_header Strict-Transport-Security "max-age=15552000; includeSubdomains;" always;

# # ciphers chosen for forward secrecy and compatibility
# TEST
# https://www.ssllabs.com/ssltest/analyze.html?d=jeancarloem.com
# https://spdycheck.org/#jeancarloem.com
# openssl s_client -host jeancarloem.com -port 443
#
# http://blog.ivanristic.com/2013/08/configuring-apache-nginx-and-openssl-for-forward-secrecy.html
# http://serverfault.com/questions/536663/nginx-php-fpm-extremely-slow-when-accessed-via-https-ssl
# http://unhandledexpression.com/2013/01/25/5-easy-tips-to-accelerate-ssl/
# https://raymii.org/s/tutorials/Strong_SSL_Security_On_nginx.html#SSLv2_and_SSLv3
#ssl_ciphers "ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384:DHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA:ECDHE-RSA-AES128-SHA:DHE-RSA-AES256-SHA256:DHE-RSA-AES128-SHA256:DHE-RSA-AES256-SHA:DHE-RSA-AES128-SHA:ECDHE-RSA-DES-CBC3-SHA:EDH-RSA-DES-CBC3-SHA:AES256-GCM-SHA384:AES128-GCM-SHA256:AES256-SHA256:AES128-SHA256:AES256-SHA:AES128-SHA:DES-CBC3-SHA:HIGH:!aNULL:!eNULL:!EXPORT:!DES:!MD5:!PSK:!RC4";
#ssl_ciphers 'ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-SHA384:ECDHE-RSA-AES256-SHA384:ECDHE-ECDSA-AES128-SHA256:ECDHE-RSA-AES128-SHA256';
#ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
#https://mozilla.github.io/server-side-tls/ssl-config-generator/
# ACRESCENTADO SHA512 DO QUE TEM NO SITE DO MOZILLA
#ssl_ciphers ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-CHACHA20-POLY1305:ECDHE-RSA-CHACHA20-POLY1305:DHE-RSA-AES128-GCM-SHA256:DHE-RSA-AES256-GCM-SHA384;